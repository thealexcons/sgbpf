#!/usr/bin/env python3
import sys, os, subprocess, time, signal, resource

# How to use:
# ./start_workers <FIRST_PORT> <NUM_WORKERS> <ALIVE_TIME> <DATA_MODE>
# This will generate a workers.cfg file and run the workers
# for the number of seconds provided

#<DATA_MODE> = "vector", "multipacket", ""

startPort = int(sys.argv[1])
numServers = int(sys.argv[2])
aliveTime = int(sys.argv[3])
dataMode = sys.argv[4] if len(sys.argv) >= 5 else ""

portRange = range(startPort, startPort + numServers)

with open("../workers.cfg", "w") as f:
    for i in portRange:
        f.write(f"127.0.0.1:{i}")
        if i == startPort + numServers - 1:
            continue
        f.write('\n')

exe = f"./worker{'_' + dataMode if dataMode != '' else ''}"

def get_cpu(idx):
    return idx % (len(os.sched_getaffinity(0)) - 1)

procs = [ 
    subprocess.Popen([exe, str(i), str(get_cpu(i))], text=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE) 
    for i in portRange
]

time.sleep(aliveTime)

for p in procs:
    p.send_signal(signal.SIGPOLL)
    stdout, stderr = p.communicate()
    print(stdout)
    print("RET CODE =", p.returncode)
    # p.terminate()